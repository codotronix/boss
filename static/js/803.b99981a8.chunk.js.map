{"version":3,"file":"static/js/803.b99981a8.chunk.js","mappings":"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","sources":["webpack://boss/./src/components/system/dock/Dock.module.css?6feb","webpack://boss/./src/components/system/dock/dockIcon/DockIcon.module.css?a245","const/APPS_DETAILS.js","const/WINDOW.js","features/procs/procsSlice.js","features/procs/useRuntime.js","components/system/dock/dockIcon/DockIcon.jsx","webpack://boss/./src/components/system/dock/minimizedAppsViewer/MinimizedAppsViewer.module.css?b174","webpack://boss/./src/components/system/dock/minimizedAppsViewer/minimizedAppsList/MinimizedAppsList.module.css?a28e","components/system/dock/minimizedAppsViewer/minimizedAppsList/MinimizedAppsList.jsx","components/system/dock/minimizedAppsViewer/MinimizedAppsViewer.jsx","components/system/dock/Dock.jsx","webpack://boss/./src/components/applications/static/welcomeApp/WelcomeApp.module.css?cf95","webpack://boss/./src/components/common/winframe/WinFrame.module.css?f8e2","components/common/winframe/useDragV2.js","components/common/winframe/Menubar.jsx","components/common/winframe/WinFrame.jsx","components/applications/withWinFrame.js","components/applications/static/welcomeApp/WelcomeApp.jsx","components/applications/dynamic/bcalc/BCalc.js","webpack://boss/./src/components/applications/static/appsViewerApp/AppsViewerApp.module.css?38aa","components/common/type-to-filter/TypeToFilter.jsx","components/common/type-to-filter/useFilter.jsx","components/applications/static/appsViewerApp/AppsViewerApp.jsx","components/applications/static/timerApp/TimerApp.jsx","webpack://boss/./src/components/applications/static/settingsApp/SettingsApp.module.css?7796","components/applications/static/settingsApp/desktop/change-wallpaper/WallpaperConfig.js","webpack://boss/./src/components/applications/static/settingsApp/desktop/change-wallpaper/ChangeWallpaper.module.css?a2f6","features/settings/settingsSlice.js","components/applications/static/settingsApp/desktop/change-wallpaper/ChangeWallpaper.jsx","components/applications/static/settingsApp/SettingsConfig.js","components/applications/static/settingsApp/SettingsApp.jsx","webpack://boss/./src/components/applications/static/terminalApp/TerminalApp.module.css?3616","services/forTerminal/commandScripts/help.js","const/FILE_CONST.js","services/localStorage.js","services/utils.js","features/fileSystem/filesSlice.js","features/fileSystem/File.js","features/fileSystem/useFileSystem.js","services/forTerminal/useProcessor.js","services/forTerminal/commandScripts/useFsCommands.js","services/forTerminal/commandScripts/useRun.js","services/forTerminal/formatter.js","components/applications/static/terminalApp/TerminalApp.jsx","webpack://boss/./src/components/applications/static/foldersApp/FoldersApp.module.css?a1fb","webpack://boss/./src/components/applications/static/foldersApp/file/File.module.css?5102","components/applications/static/foldersApp/file/File.jsx","components/applications/static/foldersApp/FoldersApp.jsx","const/MAP_APP_ID_TO_COMPONENT.js","components/applications/static/binApp/BinApp.jsx","components/system/appsContainer/AppsContainer.jsx","App.jsx","reportWebVitals.js","features/apps/appsSlice.js","store/store.js","bootstrap.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Dock_root__3Ro3G\",\"inner\":\"Dock_inner__hNqIr\",\"scrollable_holder\":\"Dock_scrollable_holder__syAwl\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"DockIcon_root__yRpG+\",\"ico\":\"DockIcon_ico__-A3EI\"};","export const APP_DISPLAY_TYPE = {\n    WINDOW: 'app_display_type_window',\n    CONSOLE: 'app_display_type_console',\n    NO_DISPLAY: 'app_display_type_no_display'\n}\n\nexport const APPS_DETAILS = {\n    \"appsviewer\": {\n        appId: \"appsviewer\",\n        name: \"Apps\",\n        iconClass: \"fa-solid fa-cubes-stacked\",\n        docked: true,\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        allowedInstances: 1,\n        keywords: 'apps, all apps'\n    },\n    \"folders\": {\n        appId: \"folders\",\n        name: \"Folders\",\n        iconClass: \"fa-regular fa-folder-open\",\n        docked: true,\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        keywords: 'finder, files, folders, explorer'\n    },\n    \"settings\": {\n        appId: \"settings\",\n        name: \"Settings\",\n        iconClass: \"fa-solid fa-gear\",\n        docked: true,\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        allowedInstances: 1\n    },\n    \"welcomeapp\": {\n        appId: \"welcomeapp\",\n        name: \"Welcome\",\n        iconClass: \"fa-solid fa-face-smile\",\n        displayType: APP_DISPLAY_TYPE.WINDOW\n    },\n    \"bcalc\": {\n        appId: \"bcalc\",\n        name: \"B-Calc\",\n        iconClass: \"fa-solid fa-calculator\",\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        keywords: 'bcalc, calc, calculator, math'\n    },\n    \"terminal\": {\n        appId: \"terminal\",\n        name: \"Terminal\",\n        iconClass: \"fa-solid fa-terminal\",\n        docked: true,\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        keywords: 'terminal, cmd, command line, command-line, dos, emulator, shell'\n    },\n    \"timer\": {\n        appId: \"timer\",\n        name: \"Timer\",\n        iconClass: \"fa-solid fa-stopwatch-20\",\n        displayType: APP_DISPLAY_TYPE.WINDOW,\n        // docked: true\n    },\n    \"bin\": {\n        appId: \"bin\",\n        name: \"Bin\",\n        iconClass: \"fa-solid fa-trash\",\n        docked: true,\n        displayType: APP_DISPLAY_TYPE.WINDOW\n    },\n    \"bnotes\": {\n        appId: \"bnotes\",\n        name: \"B-Notes\",\n        iconClass: \"fa-solid fa-file-lines\",\n        displayType: APP_DISPLAY_TYPE.WINDOW\n    },\n    \"bchat\": {\n        appId: \"bchat\",\n        name: \"B-Chat\",\n        iconClass: \"fa-solid fa-comments\",\n        displayType: APP_DISPLAY_TYPE.WINDOW\n    },\n    \"calendars\": {\n        appId: \"calendars\",\n        name: \"Calendar\",\n        iconClass: \"fa-regular fa-calendar-days\",\n        displayType: APP_DISPLAY_TYPE.WINDOW\n    }\n}","export const WINDOW_SIZES = {\n    DEFAULT: 'default_window',\n    MAXIMIZED: 'maxized_window',\n    MINIMIZED: 'minimized_window',\n}","import { createSlice } from \"@reduxjs/toolkit\"\nimport { APPS_DETAILS, APP_DISPLAY_TYPE } from \"../../const/APPS_DETAILS\"\nimport { WINDOW_SIZES } from \"../../const/WINDOW\"\n/**\n * Runtime will be storing the info on all the apps currently running\n */\n// initially no apps will be running\n// as do not have the run-with-windos-start functionality yet\nlet _runtimeIdCounter = 1\n\n\n/**\n * @typedef {Object} Process or RuntimeObject or ProcsObject // running processes\n * @property {number} runtimeId - The unique runtime Id\n * @property {string} appId - The uniq app Id per app from APPS_DETAILS\n * @property {boolean} crucial - Killable or Not?\n * @property {string} winSize - 'MINIMIZED' / 'MAXIMIZED' / 'DEFAULT'\n * @property {number} zIndex - css zIndex - visual stacking of windows, highest on top\n */\n\nconst initialState = {\n    1: { appId: \"RUNTIME\", runtimeId: 1, crucial: true, }\n}\n\nexport const procsSlice = createSlice({\n    name: 'runtime',\n    initialState,\n    reducers: {\n        // request to start / run a new app\n        runApp: (state, action) => {\n            const { appId, args } = action.payload\n\n            // Check if this app is a singleton i.e. (allowedInstances === 1)\n            // Check if already running\n            const runningInstancesCount = Object.values(state).filter(a => a.appId === appId).length\n            const appDetail = APPS_DETAILS[appId]\n\n            // Invalid ID ?\n            if(!appDetail) {\n                if(args) {\n                    // find the ctx object in args \n                    // if present update it\n                    if(typeof(args[0]) === 'object' && args[0].ctx) {\n                        args[0].ctx.error = 'Invalid App ID'\n                    }\n                }\n                return state\n            }\n\n            const allowedInstances = appDetail.allowedInstances\n            \n            if(runningInstancesCount === 0 || !allowedInstances || allowedInstances > runningInstancesCount) {\n                // let's create a new runtime object\n                const runtimeId = ++_runtimeIdCounter\n                const newRuntimeObj = { appId, runtimeId, args, zIndex: getMaxZIndex(state) + 1 }\n                // give a default winSize if window type app\n                if(appDetail.displayType === APP_DISPLAY_TYPE.WINDOW) {\n                    newRuntimeObj.winSize = WINDOW_SIZES.DEFAULT\n                }\n\n                return {\n                    ...state,\n                    [runtimeId]: newRuntimeObj\n                }\n            }\n            // if the app is already running\n            // but is minimized\n            // MAXIMIZE it\n            else if(allowedInstances === 1) {\n                // find the runtimeObject i.e. the process\n                let proc = null\n                for(let p of Object.values(state)) {\n                    if(p.appId === appId) {\n                        proc = p\n                        break\n                    }\n                }\n\n                if(proc && proc.winSize === WINDOW_SIZES.MINIMIZED) {\n                    proc.winSize = WINDOW_SIZES.MAXIMIZED\n                }\n            }\n            return state\n        },\n        terminateApp: (state, action) => {\n            const runtimeId = action.payload\n            \n            // We can terminate only non-crucial apps\n            // if not already done and removed\n            if(state[runtimeId] && !state[runtimeId].crucial) {\n                const newState = { ...state }\n                delete newState[runtimeId]\n                return newState\n            }\n            return state\n        },\n        // maxi-mize, mini-mize, unmaxi-mize\n        mizeApp: (state, action) => {\n            // console.log('mizeApp', action)\n            const { runtimeId, winSize } = action.payload\n            const runtimeObj = state[runtimeId]\n            const appDetail = APPS_DETAILS[runtimeObj.appId]\n            if(appDetail.displayType === APP_DISPLAY_TYPE.WINDOW) {\n                // check if the sent winSize is valid\n                if(Object.values(WINDOW_SIZES).includes(winSize)) {\n                    // do the actual work\n                    const modifiedRto = {\n                        ...runtimeObj,\n                        winSize\n                    }\n                    return {\n                        ...state,\n                        [runtimeId]: modifiedRto\n                    }\n                }\n            }\n            else {\n                // log this exceptional attempt to \n                // console.log('The display type of this app is ', appDetail.displayType)\n            }\n            return state\n        },\n        raiseWindow: (state, action) => {\n            const runtimeId = action.payload\n            if(runtimeId in state) {\n                state[runtimeId].zIndex = getMaxZIndex(state) + 1\n            }\n        }\n    }\n})\n\n// Action creators are generated for each case reducer function\nexport const { runApp, terminateApp, mizeApp, raiseWindow } = procsSlice.actions\n\nexport default procsSlice.reducer\n\n\n// COMMON HELPER FUNCTIONS\nexport function getMaxZIndex (state) {\n    return Math.max(...Object.values(state).map(r => r.zIndex || 0))\n}","import { useSelector, useDispatch } from \"react-redux\";\nimport { runApp, terminateApp, mizeApp, raiseWindow as _raiseWindow, \n    getMaxZIndex as _getMaxZIndex } from \"./procsSlice\";\n\nfunction useRuntime() {\n    const dispatch = useDispatch()\n    const runningApps = useSelector(state => state.procs)\n\n    const run = (appId, ...args) => dispatch(runApp({ appId, args }))\n    const terminate = runtimeId => dispatch(terminateApp(runtimeId))\n    const mize = (runtimeId, winSize) => dispatch(mizeApp({ runtimeId, winSize }))\n    const raiseWindow = runtimeId => dispatch(_raiseWindow(runtimeId))\n    const getMaxZIndex = () => _getMaxZIndex(runningApps)\n\n    return {\n        run, terminate, mize, raiseWindow, getMaxZIndex\n    }\n}\n\nexport default useRuntime\n\n","import clsx from 'clsx'\nimport styles from \"./DockIcon.module.css\"\n// import { useRun } from '../../../../hooks/useRuntime'\nimport useRuntime from '../../../../features/procs/useRuntime'\n\nconst DockIcon = props => {\n    const { appId, name, iconClass } = props\n    const runtime = useRuntime()\n    \n    return (\n        <button type=\"button\" className={styles.root} onClick={() => runtime.run(appId)} title={name}>\n            <i className={clsx(iconClass, styles.ico)} />\n        </button>\n    )\n}\n\nexport default DockIcon","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MinimizedAppsViewer_root__tchYL\",\"minimizeCount\":\"MinimizedAppsViewer_minimizeCount__J9StM\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MinimizedAppsList_root__c1PLn\",\"inner\":\"MinimizedAppsList_inner__eFQML\",\"appName\":\"MinimizedAppsList_appName__1yts9\",\"closeIco\":\"MinimizedAppsList_closeIco__FRP7q\"};","import clsx from 'clsx'\nimport styles from './MinimizedAppsList.module.css'\nimport { APPS_DETAILS } from '../../../../../const/APPS_DETAILS'\nimport { WINDOW_SIZES } from '../../../../../const/WINDOW'\nimport useRuntime from '../../../../../features/procs/useRuntime'\n\nconst MinimizedAppsList = props => {\n    const { visible, setVisible, minimizedApps } = props\n    const runtime = useRuntime()\n\n    const onAppClick = (runtimeId) => {\n        setVisible(false)\n        runtime.mize(runtimeId, WINDOW_SIZES.MAXIMIZED)\n        runtime.raiseWindow(runtimeId)\n    }\n\n    const onAppClose = (runtimeId) => {\n        // setVisible(false)\n        runtime.terminate(runtimeId)\n    }\n\n    return (\n        <div className={clsx(styles.root, !visible && 'hidden')}>\n            <ul className={styles.inner}>\n                { \n                    (!minimizedApps || minimizedApps.length === 0) && \n                    <li className='p-10'>No minimized apps</li>\n                }\n                {\n                    minimizedApps && minimizedApps.map(a => \n                    <li key={a.runtimeId}>\n                        <span \n                            className={styles.appName}\n                            onClick={() => onAppClick(a.runtimeId)}\n                        >\n                            { APPS_DETAILS[a.appId].name }\n                        </span>\n                        <i \n                            className={clsx(\"fa-solid fa-xmark\", styles.closeIco)}\n                            title='Close App'\n                            onClick={() => onAppClose(a.runtimeId)}\n                        ></i>\n                    </li>)\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default MinimizedAppsList","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport clsx from 'clsx'\nimport styles from './MinimizedAppsViewer.module.css'\nimport dockIconStyles from \"../dockIcon/DockIcon.module.css\"\nimport { WINDOW_SIZES } from '../../../../const/WINDOW'\nimport MinimizedAppsList from './minimizedAppsList/MinimizedAppsList'\n\nconst MinimizedAppsViewer = props => {\n    const [ minimizeListVisible, setMinimizeListVisible ] = useState(false)\n    const runningApps = useSelector(state => state.procs)\n    const minimizedApps = Object.values(runningApps).filter(r => r.winSize === WINDOW_SIZES.MINIMIZED)\n\n    // useEffect(() => {\n    //     console.log(thisElRef.current)\n    //     console.log('offsetTop=', thisElRef.current.offsetTop)\n    //     console.log('offsetHeight=', thisElRef.current.offsetHeight)\n    //     console.log('offsetLeft=', thisElRef.current.offsetLeft)\n    //     console.log('offsetWidth=', thisElRef.current.offsetWidth)\n    // }, \n    // [window.innerWidth])\n\n    return (\n        <div className={styles.root}>\n            <MinimizedAppsList \n                visible={minimizeListVisible} \n                setVisible={setMinimizeListVisible}\n                minimizedApps={minimizedApps}\n            />\n\n            <div className={dockIconStyles.root}>\n                { \n                    minimizedApps.length > 0 && \n                    <span className={styles.minimizeCount}>{minimizedApps.length}</span>\n                }\n                <button \n                    type=\"button\" \n                    className={dockIconStyles.root}\n                    title=\"toggle minimized apps\"\n                    onClick={() => setMinimizeListVisible(!minimizeListVisible)}\n                >\n                    <i className={clsx(\"fa-solid fa-bars\", dockIconStyles.ico)} ></i>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default MinimizedAppsViewer","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styles from './Dock.module.css'\nimport DockIcon from './dockIcon/DockIcon'\nimport MinimizedAppsViewer from './minimizedAppsViewer/MinimizedAppsViewer'\nimport useRuntime from '../../../features/procs/useRuntime'\n\nconst Dock = props => {\n    // const { dockDetails } = props\n    const [zIndex, setZIndex] = useState(1)\n    const apps = useSelector(state => state.apps)\n    const dockedApps = Object.values(apps).filter(a => a.docked)\n    const runtime = useRuntime()\n    \n    const onClick = () => {\n        setZIndex(runtime.getMaxZIndex()+1)\n    }\n\n    return (\n        <div id=\"thedock\" className={styles.root} style={{ zIndex }} onClick={onClick}>\n\n            <div className={styles.inner}>\n                <div className={styles.scrollable_holder}>\n                {\n                    dockedApps && dockedApps.map(da => <DockIcon \n                        key={da.appId} {...da}\n                    />)\n                }\n                </div>\n                <MinimizedAppsViewer />\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Dock","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WelcomeApp_root__e1Te1\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WinFrame_root__7I0Xk\",\"minimized\":\"WinFrame_minimized__eeQTp\",\"maximized\":\"WinFrame_maximized__z1iEa\",\"bar\":\"WinFrame_bar__kl8w-\",\"titlebar\":\"WinFrame_titlebar__IP5hT\",\"btns\":\"WinFrame_btns__-rDlS\",\"mizeBtn\":\"WinFrame_mizeBtn__YwPof\",\"dragHangle\":\"WinFrame_dragHangle__JYsDj\",\"menubar\":\"WinFrame_menubar__F+ov1\",\"menu\":\"WinFrame_menu__XVTtb\",\"menuName\":\"WinFrame_menuName__wE-S3\",\"subMenu\":\"WinFrame_subMenu__lhnTZ\",\"visible\":\"WinFrame_visible__D0Kcn\",\"body\":\"WinFrame_body__RPv4g\",\"loadingComp\":\"WinFrame_loadingComp__ZRBu7\",\"repositionHandle\":\"WinFrame_repositionHandle__HI2Yn\",\"statusbar\":\"WinFrame_statusbar__cPllo\"};","import { useState } from \"react\";\nimport interact from \"interactjs\";\n\n/**\n * This custom hook tracks the position \n * of the given element which may be subject to drag ...\n * \n * So, it can be used for any number of applications that depend on mouse drag\n * For Example, reposition, resize etc.\n * @param {*} el \n * @param {*} initPosition \n * @returns \n */\nfunction useDragV2(el, initPosition) {\n    const [position, setPosition] = useState(initPosition);\n\n    // console.log(el)\n    el && interact(el).draggable({\n        listeners: {\n            start(event) {\n                console.log(event.type, event.target)\n            },\n            move(event) {\n                setPosition(pos => ({ x: pos.x + event.dx, y: pos.y + event.dy }))\n            },\n        }\n    })\n\n\n    return [position, setPosition]\n}\n\nexport default useDragV2;","import styles from './WinFrame.module.css'\nimport clsx from 'clsx'\nimport { useState } from 'react'\n\nconst Menubar = props => {\n    const { menu } = props\n    const [ visibleSubMenuId, setVisibleSubMenuId ] = useState('')\n\n    const toggleSubMenu = id => {\n        if(visibleSubMenuId === id) setVisibleSubMenuId('')\n        else setVisibleSubMenuId(id)\n    }\n\n    // Handle the click and hide the sub menu\n    const handleAndHide = (fn) => {\n        fn()\n        setVisibleSubMenuId('')\n    }\n\n    return(\n        <div className={clsx(styles.bar, styles.menubar)}>\n            {\n                menu && Object.entries(menu).map(([menuName, menuVal]) => \n                <div key={menuName} className={clsx(styles.menu, visibleSubMenuId===menuName && styles.visible )}>\n                    <span className={styles.menuName} onClick={() => toggleSubMenu(menuName)}>{ menuName }</span>\n                    <ul className={styles.subMenu}>\n                    {   \n                        // Loop over the Submenu\n                        Object.entries(menuVal).map(([subMenuName, subMenuVal]) => \n                        <li key={subMenuName} onClick={() => handleAndHide(subMenuVal.handleClick)} >\n                            { subMenuName }\n                        </li>)\n                    }\n                    </ul>\n                </div>)\n            }\n        </div>\n    )\n}\n\nexport default Menubar","import { useRef, Suspense } from 'react'\nimport clsx from 'clsx'\nimport styles from './WinFrame.module.css'\nimport { APPS_DETAILS } from '../../../const/APPS_DETAILS'\nimport useRuntime from '../../../features/procs/useRuntime'\n// import useDrag from './useDrag'\nimport useDragV2 from './useDragV2'\nimport { WINDOW_SIZES } from '../../../const/WINDOW'\nimport Menubar from './Menubar'\n\nconst NON_BODY_HEIGHTS = 25\n\nconst LoadingScreen = ({ appName }) => {\n    return (\n        <div className={styles.loadingComp}>\n            {appName || 'The App'} is Loading ...\n        </div>\n    )\n}\n\n/**\n * This will render the Menu Component\n * @param {*} menu - This will have the following structure\n * \n    {\n        File: {\n            \"New\": { handleClick: Fn },\n            \"SubMenu 2\": { handleClick: Fn },\n            \"Quit\": { handleClick: Fn },\n        },\n        Edit: {\n            \"Copy\": { handleClick: Fn },\n            \"Cut\": { handleClick: Fn },\n            \"Paste\": { handleClick: Fn },\n        }\n    }\n */\nconst renderMenu = (menu) => {\n    return (\n        <Menubar menu={menu} />\n    )\n}\n\nconst getRandomInitPosition = () => ({\n    y: 10 + Math.floor(Math.random()*200),\n    x: 10 + Math.floor(Math.random()*100),\n})\n\nconst getInitSize = () => ({\n    x: Math.max(window.innerWidth - 300, 300),\n    y: Math.max(window.innerHeight - 200, 400),\n})\n\n\nconst WinFrame = props => {\n    // const { render } = props\n    const { appProps, AppComponent } = props\n    const { runtimeInfo } = appProps\n    const appName = APPS_DETAILS[runtimeInfo.appId].name\n    const runtime = useRuntime()\n\n    const initPosRef = useRef(getRandomInitPosition())\n    const initSizeRef = useRef(getInitSize())\n    \n    const dragRef = useRef()\n    const resizeRef = useRef()\n\n    // use the useDragV2 custom hook for Dragging and repositioning\n    const [ position, setPosition ] = useDragV2(dragRef.current, initPosRef.current)\n    const [ size ] = useDragV2(resizeRef.current, initSizeRef.current)\n\n    const raiseWindowOnTop = () => runtime.raiseWindow(runtimeInfo.runtimeId)\n\n    const maximize = () => runtime.mize(runtimeInfo.runtimeId, WINDOW_SIZES.MAXIMIZED)\n    const minimize = () => runtime.mize(runtimeInfo.runtimeId, WINDOW_SIZES.MINIMIZED)\n    const unmaximize = () => runtime.mize(runtimeInfo.runtimeId, WINDOW_SIZES.DEFAULT)\n    \n    const close = () => {\n        // const r = window.confirm(\"Do you really want to close ?\")\n        // if(r) {\n            runtime.terminate(runtimeInfo.runtimeId)\n        // }\n    }\n\n    const openNewWindow = () => {\n        runtime.run(runtimeInfo.appId)\n    }\n\n    return (\n        <div \n            className={clsx(\n                'WinFrame',\n                styles.root, \n                (runtimeInfo.winSize===WINDOW_SIZES.MINIMIZED) && styles.minimized, \n                (runtimeInfo.winSize===WINDOW_SIZES.DEFAULT) && styles.defaultSized,\n                (runtimeInfo.winSize===WINDOW_SIZES.MAXIMIZED) && styles.maximized,\n                )}\n            style={{ \n                height: size.y, \n                width: size.x, \n                zIndex: runtimeInfo.zIndex, \n                transform: `translate(${position.x}px, ${position.y}px)` \n            }}\n            onClick={raiseWindowOnTop}\n            title={ appName || 'Application Window' }\n        >\n\n            {/* Title Bar */}\n            <div className={clsx(styles.bar, styles.titlebar)}>\n                <div className={styles.apptitle}>\n                    { appName || 'Application' }\n                </div>\n                {/* Just a transparent place to hold and drag -- Hide it when Maximized */}\n                <div className={styles.dragHangle} ref={dragRef}></div>\n\n                <div className={styles.btns}>\n                    { \n                        runtimeInfo.winSize !== WINDOW_SIZES.MAXIMIZED &&\n                        <button type='button' onClick={maximize} title=\"Maximize\" className={styles.mizeBtn}>\n                            <i className=\"fa-regular fa-square\"></i>\n                        </button>\n                        \n                    }\n                    {\n                        (runtimeInfo.winSize === WINDOW_SIZES.MAXIMIZED || \n                            runtimeInfo.winSize === WINDOW_SIZES.MINIMIZED) && \n                            <button type='button' onClick={unmaximize} title=\"Un-Maximize\" className={styles.mizeBtn}>\n                                <i className=\"fa-solid fa-down-left-and-up-right-to-center\"></i>\n                            </button>\n                            \n                    }\n                    <button type='button' onClick={minimize} title=\"Minimize\" className={styles.mizeBtn}>\n                        <i className=\"fa-solid fa-window-minimize\"></i>\n                    </button>\n                    \n                    <button type='button' onClick={close} title=\"Close\" className={styles.mizeBtn}>\n                        <i className=\"fa-solid fa-xmark\"></i>\n                    </button>\n                    \n                </div>\n            </div>\n\n            {/* THE BODY */}\n            <div className={styles.body}>\n                {/* \n                    // Suspense Components could be remotely loaded \n                    // via Webpack Module Federation - Micro-frontend\n                 */}\n                <Suspense fallback={<LoadingScreen appName={appName} />}>\n                    <AppComponent \n                        {...appProps}\n                        renderMenu={renderMenu}\n                        onClose={close}\n                        onNew={openNewWindow}\n                    />\n                </Suspense>\n            </div>\n            \n            {/* The Status Bar At the Bottom */}\n            <div className={styles.statusbar}>\n                <i \n                    className={clsx(\"fa-solid fa-arrow-up-right-dots\", styles.repositionHandle)}\n                    // draggable=\"true\"\n                    // onDrag={e => onResize(e.pageX, e.pageY)}\n                    // onDragStart={e => onResizeStart(e.pageX, e.pageY)}\n                    // onDragEnd={e => onResizeEnd(e.pageX, e.pageY)}\n                    ref={resizeRef}\n                ></i>\n            </div>\n        </div>\n    )\n}\n\nexport default WinFrame","import { WinFrame } from \"../common\"\nimport React from \"react\"\n\n// This is a HOC function\n// which will take the core / original component\n// and then send a WinFrame wrapper version of it\nfunction withWinFrame (AppComponent) {\n\n    // Step 1: Create a Wrapped Component \n    \n    const WinFrameWrappedAppComponent = props => \n        <WinFrame appProps={props} AppComponent={AppComponent} />\n\n\n    // Step 2: Return the Wrapped Component\n    return WinFrameWrappedAppComponent\n}\n\nexport default withWinFrame ","import styles from './WelcomeApp.module.css'\nimport withWinFrame from '../../withWinFrame'\n\nconst WelcomeApp = (props) => {\n    // console.log('WelcomeApp props = ', props)\n    return (\n        <div className={styles.root}>\n            <i className=\"fa-solid fa-face-smile\"></i>\n            <h2>Welcome to B.O.S.S</h2>\n            <div><u>B</u>asic <u>OS</u> <u>S</u>imulation</div>\n        </div>\n    )\n}\n\nexport default withWinFrame(WelcomeApp)","import React from \"react\"\nimport withWinFrame from \"../../withWinFrame\"\nconst BCalc = React.lazy(() => import(\"bcalc/BCalc\"))\n\nexport default withWinFrame(BCalc)","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AppsViewerApp_root__sHx-3\",\"inner\":\"AppsViewerApp_inner__DgUUp\",\"app\":\"AppsViewerApp_app__NuVJU\",\"figSlot\":\"AppsViewerApp_figSlot__YDIVw\",\"appIco\":\"AppsViewerApp_appIco__cX9XG\",\"appName\":\"AppsViewerApp_appName__t4ByG\"};","import { useEffect } from \"react\"\nimport useFilter from \"./useFilter\"\n\n/**\n * \n * @param { { allItems, filterKeys, setFilteredItems } } props\n * @param { itemsArray } allItems - The items to filter\n * @param { [key1, key2, ...] } filterKeys - The keys to filter\n * @param { Function } setFilteredItems - The function to set the filtered items\n * @returns \n */\nconst TypeToFilter = props => {\n    const { allItems, filterKeys, setFilteredItems } = props\n    const [ filteredItems, filterTxt, onChangeFilterTxt ] = useFilter(allItems, filterKeys)\n\n    // Whenever filtered item changes, notify the parent\n    useEffect(() => {\n        setFilteredItems(filteredItems)\n    }, \n    [filteredItems, setFilteredItems])\n\n    return(\n        <div style={{marginBottom: '15px'}}>\n            <input \n                type=\"text\" \n                value={filterTxt} \n                onChange={onChangeFilterTxt} \n                placeholder=\"Type to filter\"\n                style={{ width: '100%', padding: '5px' }}\n            />\n        </div>\n    )\n}\n\nexport default TypeToFilter","import { useState } from \"react\";\n\nexport default function useFilter(allItems, filterKeys) {\n    const [filteredItems, setFilteredItems] = useState(allItems)\n    const [filterTxt, setFilterTxt] = useState('')\n\n    const onChangeFilterTxt = e => {\n        const txt = e.target.value\n        setFilterTxt(txt)\n        const filtered = allItems.filter(item => {\n            return filterKeys.some(key => item[key] && item[key].toLowerCase().includes(txt.toLowerCase()))\n        })\n        setFilteredItems(filtered)\n    }\n\n    return [ filteredItems, filterTxt, onChangeFilterTxt ]\n}","import { APPS_DETAILS } from \"../../../../const/APPS_DETAILS\";\nimport withWinFrame from \"../../withWinFrame\";\nimport styles from \"./AppsViewerApp.module.css\"\nimport clsx from \"clsx\"\nimport { useState } from \"react\";\nimport useRuntime from \"../../../../features/procs/useRuntime\";\nimport TypeToFilter from \"../../../common/type-to-filter/TypeToFilter\";\n\nconst AppsViewerApp = props => {\n    const { runtimeInfo, renderMenu, onClose, onNew } = props\n    // Filter out AppsView \n    const [apps] = useState(Object.values(APPS_DETAILS).filter(a => a.appId!== runtimeInfo.appId) )\n    const runtime = useRuntime()\n    const [filteredApps, setFilteredApps] = useState(apps)\n\n    const runApp = appId => {\n        // Delay the load / load asyncronously\n        // so that this windows click event does not\n        // put it on the new app\n        // The new app should be on Top of this\n        window.setTimeout(() => {\n            runtime.run(appId)\n        }, 0)\n    }\n\n    const createMenu = () => {\n        return renderMenu({\n            File: {\n                \"New\": { handleClick: onNew },\n                \"SubMenu 2\": { handleClick: () => console.log('SubMenu 2') },\n                \"Quit\": { handleClick: onClose },\n            },\n            Edit: {\n                \"Copy\": { handleClick: () => console.log('Copy') },\n                \"Cut\": { handleClick: () => console.log('Cut') },\n                \"Paste\": { handleClick: () => console.log('Paste') },\n            }\n        })\n    }\n\n    return (\n        <>\n        { createMenu() }\n        <div className={styles.root}>\n            \n            <TypeToFilter\n                allItems={apps}\n                filterKeys={['name', 'keywords']}\n                setFilteredItems={setFilteredApps}\n            />\n            <div className={styles.inner}>\n            {\n                filteredApps.map(a => \n                <div \n                    key={a.appId} className={clsx(styles.app, 'flex-c')}\n                    // onClick={() => runApp(a.appId)}\n                    onDoubleClick={() => runApp(a.appId)}\n                    title={a.name}\n                >\n                    <div className={clsx(styles.figSlot, 'flex-c')}>\n                    { a.iconClass && <i className={clsx(a.iconClass, styles.appIco)}></i> }\n                    </div>\n                    \n                    <span className={clsx(styles.appName, 'flex-c')}>{ a.name }</span>\n                </div>)\n            }\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default withWinFrame(AppsViewerApp)\n\n\n\n","import withWinFrame from \"../../withWinFrame\"\n// import { useState } from \"react\"\n\nconst TimerApp = props => {\n\n    return (\n        <div>\n            The Timer App - Work in Progress\n        </div>\n    )\n}\n\nexport default withWinFrame(TimerApp)","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SettingsApp_root__ZTnGO\",\"container\":\"SettingsApp_container__D3QmF\",\"left\":\"SettingsApp_left__x+4BW\",\"btn_panel\":\"SettingsApp_btn_panel__1MCQI\",\"toggle_btn\":\"SettingsApp_toggle_btn__vvQZo\",\"left_inner\":\"SettingsApp_left_inner__p8-GU\",\"selected\":\"SettingsApp_selected__3ikd2\",\"mid\":\"SettingsApp_mid__Y5J8y\",\"menu_closed\":\"SettingsApp_menu_closed__yUNlx\"};","export const WallpaperConfig = {\n    root: \"/boss/assets/img/wallpapers/\",\n    wallpapers: [\n        { path: 'ai-generated-8293344_1280.jpg' },\n        { path: 'ai-generated-8327632_1280.jpg' },\n        { path: 'beach-front-5819728_1280.jpg' },\n        { path: 'dog-8008483_1280.jpg' },\n        { path: 'fantasy-3077928_1280.jpg' },\n        { path: 'hills-2836301_1280.jpg' },\n        { path: 'horse-8008038_1280.jpg' },\n        { path: 'interior-design-7413418_1280.jpg' },\n        { path: 'pier-1467984_1280.jpg' },\n        { path: 'plouzane-1758197.jpg' },\n        { path: 'rapeseed-7172836_1280.jpg' },\n        { path: 'sci-fi-2992797_1280.jpg' },\n        { path: 'sports-car-4815234_1280.jpg' },\n        { path: 'superbike-930715_1280.jpg' },\n        { path: 'toyota-967011_1280.jpg' },\n        { path: 'the-fish-3426368_1280.jpg' },\n        { path: 'woman-6882242_1280.jpg' },\n    ]\n}","// extracted by mini-css-extract-plugin\nexport default {\"change_wallpaper\":\"ChangeWallpaper_change_wallpaper__AKB02\",\"wallpapers_container\":\"ChangeWallpaper_wallpapers_container__cV6Nm\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallpaper: \"/boss/assets/img/wallpapers/ai-generated-8293344_1280.jpg\",\n}\n\nexport const settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        changeWallpaper: (state, action) => {\n            state.wallpaper = action.payload\n        },\n    },\n})\n\nexport const { changeWallpaper } = settingsSlice.actions\nexport default settingsSlice.reducer","import { WallpaperConfig } from \"./WallpaperConfig\"\nimport styles from './ChangeWallpaper.module.css'\nimport { useDispatch } from \"react-redux\"\nimport { changeWallpaper } from \"../../../../../../features/settings/settingsSlice\"\n\nfunction ChangeWallpaper() {\n    const dispatch = useDispatch()\n\n    const handleWallpaperChange = wallpaper => {\n        dispatch(changeWallpaper(wallpaper))\n    }\n\n    return (\n        <div>\n            <ul className={styles.wallpapers_container}>\n                {\n                    WallpaperConfig.wallpapers.map(wallpaper => (\n                        <li key={wallpaper.path}>\n                            <img \n                                src={`${WallpaperConfig.root}${wallpaper.path}`} \n                                alt=\"wallpaper\" \n                                onClick={() => handleWallpaperChange(`${WallpaperConfig.root}${wallpaper.path}`)}\n                            />\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default ChangeWallpaper","import ChangeWallpaper from \"./desktop/change-wallpaper/ChangeWallpaper\";\n\n\nexport const SettingsConfig = {\n    menuItems: [\n        { id: 1, name: \"Change Wallpaper\", component: ChangeWallpaper },\n        { id: 2, name: \"Menu Item 2\", component: () => <div>Menu Item 2 Placeholer</div> },\n        { id: 3, name: \"Menu Item 3\", component: () => <div>Menu Item 3 Placeholer</div> },\n        { id: 4, name: \"Menu Item 4\", component: () => <div>Menu Item 4 Placeholer</div> },\n        { id: 5, name: \"Menu Item 5\", component: () => <div>Menu Item 5 Placeholer</div> }\n    ]\n}","import { useState } from \"react\"\nimport withWinFrame from \"../../withWinFrame\"\nimport styles from \"./SettingsApp.module.css\"\nimport { SettingsConfig } from \"./SettingsConfig\"\nimport clsx from \"clsx\"\nimport TypeToFilter from \"../../../common/type-to-filter/TypeToFilter\"\n\nconst SettingsApp = props => {\n    // const { rendeMenu } = props\n    const { menuItems } = SettingsConfig\n    const [selected, setSelected] = useState(menuItems[0].id)\n    const [isMenuClosed, setIsMenuClosed] = useState(false)\n    const [filteredMenuItems, setFilteredMenuItems] = useState(menuItems)\n\n    return (\n        <div className={styles.root}>\n            <div className={clsx(styles.container, isMenuClosed && styles.menu_closed)}>\n\n                {/* The Menu Toggle Button */}\n                <div className={styles.btn_panel}>\n                    <button className={styles.toggle_btn} onClick={() => setIsMenuClosed(!isMenuClosed)}>\n                        <i className=\"fa-solid fa-arrow-left-long\"></i>\n                    </button>\n                </div>\n                \n\n                {/* Left Column */}\n                <section className={styles.left}>\n                    <TypeToFilter\n                        allItems={menuItems}\n                        filterKeys={['name']}\n                        setFilteredItems={setFilteredMenuItems}\n                    />\n                    <ul className={styles.left_inner}>\n                        {filteredMenuItems.map(item => (\n                            <li key={item.id} className={clsx(selected === item.id && styles.selected)} onClick={() => setSelected(item.id)}>\n                                {item.name}\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n\n                {/* Mid Column / Main area */}\n                <section className={styles.mid}>\n                    <section className={styles.mid_inner}>\n                        {menuItems.map(item => (\n                            <div key={item.id} className={clsx(selected !== item.id && 'hidden')}>\n                                {item.component()}\n                            </div>\n                        ))}\n                    </section>\n                </section>\n            </div>\n        </div>\n    )\n}\n\nexport default withWinFrame(SettingsApp)","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TerminalApp_root__hnkgI\",\"historyTxt\":\"TerminalApp_historyTxt__NdHdn\",\"inputArea\":\"TerminalApp_inputArea__6htWV\"};","/**\n * the 'help' command for BOSS Terminal.\n * @param {object} ctx \n * @param {string[]} args \n * @returns {string} message\n * @returns {number} code\n */\nimport { APPS_DETAILS } from \"../../../const/APPS_DETAILS\"\n\nexport const help = (ctx, args) => {\n\n    // \"help apps\" command\n    // if the user wants to see the available apps\n    if(args[0] === 'apps') {\n        let appsNamesAndIds = '\\nHere are the available apps:\\n\\n'\n        Object.values(APPS_DETAILS).forEach(app => {\n            appsNamesAndIds += `${app.name} (AppId: ${app.appId})\\n`\n        })\n\n        appsNamesAndIds += '\\nType `run &lt;appId&gt;` to run a app\\n\\n'\n\n        return [appsNamesAndIds, 0]\n    }\n    return [helpText, 0]\n}\n\nconst helpText = `\nAvailable Commands:\nhelp - Show this help text\nhelp apps - Show available apps\n\nrun &lt;appId&gt; - Run an app\n\nls - List files in the current directory\npwd - Show current directory path\n\ncd &lt;dir&gt; - Change directory\nmd &lt;dir&gt; - Make a new directory\nmkdir - alias for md\ntouch &lt;file&gt; - Create a new file\ncls - Clear the terminal screen\nclear - alias for cls\n\n`","export const FILE_TYPE = {\n    FILE: 'FILE',\n    FOLDER: 'FOLDER'\n}","const ls = {\n    get: k => JSON.parse(localStorage.getItem(k) || null),\n    set: (k, v) => localStorage.setItem(k, JSON.stringify(v)),\n    clear: k => localStorage.setItem(k, '')\n}\n\nexport default ls","\nexport const trimNDot = (s, n) => s.length > n ? (s.substring(0,n) + '...') : s\n\nexport const isFileNameValid = fileName => {\n    const VALID_FILENAME_REGEX = /^[a-zA-Z0-9-._ ]{1,}$/\n    return VALID_FILENAME_REGEX.test(fileName)\n}\n/**\n * Splits a string accross space \n * but keeps Double-Quoted strings intact\n * @param {String} line\n */\nexport function splitter(line) {\n    line = line.trim()\n    let parts = []\n    let s = ''          // current part\n    let q = ''          // current quote\n    let qMap = {}       // { qID1: String1, qID2: String2, ... }\n    let qInProg = false // quote in progress\n    let cnt = 0\n    let prefix = '__QS__'   // to identify a QuotedString\n\n    for(let c of line) {\n        // Quote found ?\n        if(c === '\"') {\n            // already a quote in progress?\n            // end it\n            if(qInProg) {\n                // if there was something in this quote\n                q = q.trim()\n                if(q.length > 0) {\n                    let qId = `${prefix}${++cnt}`\n                    s += qId\n                    qMap[qId] = q \n                    q = ''\n                }\n                qInProg = false\n            }\n            // else start a quote\n            else {\n                qInProg = true\n            }\n        }\n\n        // if a space is found\n        else if(c === ' ') {\n            // if inside a quote?\n            // then add it to the quote\n            if(qInProg) q += c \n            // else make a splitted-part\n            else {\n                // if at all it contains something\n                s = s.trim()\n                if(s.length > 0) {\n                    parts.push(s)\n                    s = ''\n                }\n            }\n        }\n        // else, add it to appropriate place\n        else {\n            if(qInProg) q += c\n            else s += c \n        }\n    }\n\n    // care for the last part\n    // which might not have a space after it\n    if(s.length > 0) parts.push(s)\n\n    // restore all the prefix quotes\n    parts = parts.map(p => p.replaceAll(/__QS__[0-9]{1,}/gm, qId => qMap[qId] || qId))\n\n    return parts\n}","import { createSlice } from \"@reduxjs/toolkit\";\nimport { File } from \"./File\";\nimport { FILE_TYPE } from \"../../const/FILE_CONST\";\nimport ls from \"../../services/localStorage\";\nimport { isFileNameValid } from \"../../services/utils\";\nconst KEY_FILE_TREE = 'BOSS/FILE-TREE'\n\nexport const initFileTree = {\n    \"/\": {\n        id: \"/\",\n        name: \"/\",\n        fileType: FILE_TYPE.FOLDER, \n        parentId: null,\n        children: ['documents', 'file0']\n    },\n    \"documents\": {\n        id: \"documents\",\n        name: \"Documents\",\n        fileType: FILE_TYPE.FOLDER, \n        parentId: '/',\n        children: []\n    },\n    \"file0\": {\n        id: \"file0\",\n        name: \"Hello Boss\",\n        fileType: FILE_TYPE.FILE, \n        parentId: '/',\n        content: \"Hello Boss.\\nThis is a text file\"\n    }\n} \n// Initially there will be only THE-ROOT (/)\nconst initialState = ls.get(KEY_FILE_TREE) || initFileTree\n\nls.set(KEY_FILE_TREE, initialState)\n\n// { id1: File1, id2: File2 ... }\n\n// NOT TO BE USED DIRECTLY\n// SHOULD BE ONLY USED BY THE PROVIDED HOOK\nexport const filesSlice = createSlice({\n    name: 'fileSystem',\n    initialState,\n    reducers: {\n        // create file / folder\n        create: (state, action) => {\n            const { name, parentId, fileType, owner } = action.payload \n            const newState = _create(state, name, parentId, fileType, owner)\n            ls.set(KEY_FILE_TREE, newState)\n            return newState\n        },\n        // rename a file/fodler\n        rename: (state, action) => {\n            const { fileId, newName } = action.payload \n            const newState = _rename(state, fileId, newName)\n            ls.set(KEY_FILE_TREE, newState)\n            return newState\n        }\n    }\n})\n\nexport const { create, rename } = filesSlice.actions\nexport default filesSlice.reducer\n\n\n///////////////// WRITING FUNCTIONS SEPARATELY FOR TESTABILITY ///////////////////////\n/**\n * Helper reducer function that takes in the state,\n * does necessary changes to the state and returns a new state\n * @param {*} state \n * @param {*} name \n * @param {*} parentId \n * @param {*} fileType \n * @param {*} owner \n * @returns \n */\nexport function _create(state, name, parentId, fileType, owner) {\n    // File name invalid?\n    if(!name.trim() || !isFileNameValid(name)) {\n        return state\n    }\n    // Invalid parentId\n    // Or parentId is not a folder\n    if(!(parentId in state) || state[parentId].fileType !== FILE_TYPE.FOLDER) {\n        return state\n    }\n\n    // Check for duplicate file names\n    if(state[parentId].children.map(fid => state[fid].name).includes(name)) {\n        return state\n    }\n\n    // Create new New File Object\n    const newFile = File(name, parentId, fileType, owner)\n\n    // add this new File to the state\n    const newState = {\n        ...state,\n        [newFile.id]: newFile\n    }\n\n    // add this file's id to its parent's children\n    if(parentId) {\n        newState[parentId] = {\n            ...newState[parentId],\n            children: [...newState[parentId].children, newFile.id]\n        }\n    }\n\n    // return this new state\n    return newState\n}\n\nexport function _rename(state, fileId, newName) {\n    // File name invalid?\n    if(!newName.trim() || !isFileNameValid(newName)) {\n        return state\n    }\n    // Invalid fileId\n    if(!(fileId in state)) {\n        return state\n    }\n\n    // Check for duplicate file names\n    // Amongst the Siblings\n    const parentId = state[fileId].parentId\n    if(state[parentId].children.map(fid => state[fid].name).includes(newName)) {\n        return state\n    }\n\n    // Create a new State\n    // with the name changed for the given fileId\n    const newState = {\n        ...state,\n        [fileId]: {\n            ...state[fileId],\n            name: newName\n        }\n    }\n\n    return newState\n}","import { v4 as uuidv4 } from 'uuid';\nimport { FILE_TYPE } from \"../../const/FILE_CONST\";\n\n/**\n * File Objects, Folders are special types of files\n * \n * NOTE: Not making a class because that is not seriealizable by redux\n */\n\nexport function File (name, parentId, fileType, owner) {\n    return {\n        id : uuidv4(),\n        name, parentId, fileType, owner,\n        date_creation : Date.now(),\n        date_modification : Date.now(),\n        children: fileType === FILE_TYPE.FOLDER ? [] : null\n    }\n}\n\n","import { useSelector, useDispatch } from \"react-redux\"\nimport { create, rename } from \"./filesSlice\"\nimport { FILE_TYPE } from \"../../const/FILE_CONST\"\nimport { useCallback } from \"react\"\nimport { isFileNameValid } from \"../../services/utils\"\n\nexport const useFileSystem = () => {\n    const _files = useSelector(state => state.files)\n    const dispatch = useDispatch()\n    \n    const createFile = useCallback((name, parentId, owner) => _create(_files, dispatch, name, parentId, FILE_TYPE.FILE, owner), [dispatch, _files])\n    const createDir = (name, parentId, owner) => _create(_files, dispatch, name, parentId, FILE_TYPE.FOLDER, owner)\n    const rename = (fileId, newName) => _rename(_files, dispatch, newName, fileId)\n    const createFolder = createDir\n    const getParentId = fileID => _getParentId(_files, fileID)\n    const getChildren = useCallback(parentId => _getChildren(_files, parentId), [_files])\n    const getChildrenNames = parentId => _getChildrenNames(_files, parentId)\n    /**\n     * Get path names till the given file id\n     * @param {*} fileId \n     * @returns \n     */\n    const getPathTill = fileId => _getPathTill(_files, fileId)\n    const getFileInfo = absPath => _getFileInfo(_files, absPath)\n\n    return {\n        allFiles: _files, createFile, createDir, createFolder, getParentId, getChildren, getChildrenNames, \n        getPathTill, getFileInfo, rename\n    }\n}\n\nfunction _create (_files, dispatch, name, parentId, fileType, owner) {\n    // File name invalid?\n    if(!name.trim() || !isFileNameValid(name)) {\n        return `Invalid name ${name}`\n    }\n\n    // Invalid parentId\n    // Or parentId is not a folder\n    if(!(parentId in _files) || _files[parentId].fileType !== FILE_TYPE.FOLDER) {\n        return `Can not create file/folder in the given location`\n    }\n\n    // Check for duplicate file names\n    if(_files[parentId].children.map(fid => _files[fid].name).includes(name)) {\n        return `File/folder name \"${name}\" already exists`\n    }\n\n    dispatch(create({ name, parentId, fileType, owner }))\n    return ''\n}\n\nfunction _rename(_files, dispatch, newName, fileId) {\n    // File name invalid?\n    if(!newName.trim() || !isFileNameValid(newName)) {\n        return `Invalid name ${newName}`\n    }\n    // Invalid fileId\n    if(!(fileId in _files)) {\n        return `File ID (${fileId}) not valid`\n    }\n\n    // Check for duplicate file names\n    // Amongst the Siblings\n    const parentId = _files[fileId].parentId\n    if(_files[parentId].children.map(fid => _files[fid].name).includes(newName)) {\n        return `File/folder name \"${newName}\" already exists`\n    }\n\n    dispatch(rename({ fileId, newName }))\n    return ''\n}\n\nexport function _getParentId(_files, fileId) {\n    if(fileId === '/') return \"/\"\n    else return _files[fileId].parentId\n}\n\n/**\n * Returns string path NAMES starting from root to the given fileId\n * Note: it returns the file/folder names, not the ids\n * Please see the unit tests to understand more\n * @param {*} _files | File Tree JSON\n * @param {String} fileId | A FileID or FolderID\n * @returns \n */\nexport function _getPathTill(_files, fileId) {\n    let pathSegments = []\n\n    // go up the parent ladder\n    while(fileId in _files) {\n        // we need the names, not the IDs\n        pathSegments.push(_files[fileId].name)\n        fileId = _files[fileId].parentId\n    }\n\n    return pathSegments.reverse().join(\"/\").replace('//', '/')\n}\n\n/**\n * Returns an array of fileId and fileName till the root\n * [ { id: \"/\", name: \"/\" } , { id1, name1 }, { id2, name2 }, ..., { givenId, nameN } ]\n * See unit test to understand test cases\n * @param {JSON} _files | File Tree JSON\n * @param {String} fileId | A FileID or FolderID\n * @returns \n */\nexport function _getPathArrTill(_files, fileId) {\n    let pathSegments = []\n\n    // go up the parent ladder\n    while(fileId in _files) {\n        // we need the names, not the IDs\n        let pathObj = { id: fileId, name: _files[fileId].name }\n        pathSegments.push(pathObj)\n        fileId = _files[fileId].parentId\n    }\n\n    return pathSegments.reverse()\n}\n\n/**\n * Return array of children nodes for a given parentId\n * @param {JSON} _files | File Tree JSON\n * @param {String} fileId | A FileID or FolderID\n * @returns Array<FileNodes> \n */\nexport function _getChildren(_files, parentId) {\n    let children = []\n    if(parentId === '') {\n        children = Object.values(_files).filter(f => f.parentId === parentId)\n    }\n    else if (parentId in _files) {\n        let childrenIds = _files[parentId].children || []\n        children = childrenIds.map(cId => _files[cId])\n    }\n    return children\n}\n\n/**\n * Return strings of names of all the children\n * @param {JSON} _files | File Tree JSON\n * @param {String} fileId | A FileID or FolderID\n * @returns Array<String> \n * @returns \n */\nexport function _getChildrenNames(_files, parentId) {\n    return _getChildren(_files, parentId).map(f => f.name)\n}\n\n/**\n * Returns the file node at the given absolute path or return null\n * @param {JSON} _files | File Tree JSON\n * @param {String} absPath | Absolute path starting with / \n * @returns FileNode\n */\nexport function _getFileInfo (_files, absPath) {\n    absPath = _normalizePath(absPath)\n\n    // if root itself\n    if(absPath === '/') return _files[\"/\"]\n\n    // get the file/folder names array\n    let pathNames = absPath.split('/').filter(f => f.trim().length>0)\n\n    // initial scope of search is the root level files\n    let filesInLevel = _getChildren(_files, '/')\n\n    // the final resulting file\n    let lastFile = null\n\n    // loop thru the path names one by one\n    for(let fname of pathNames) {\n        let isFound = false\n        for(let file of filesInLevel) {\n            // if found ?\n            if(file.name === fname) {\n                isFound = true \n                lastFile = file\n                filesInLevel = _getChildren(_files, file.id)\n                break\n            }\n        }\n\n        // broken breadcrumb\n        if(!isFound) {\n            return null \n        }\n    }\n    return lastFile\n} \n\n/**\n * Normalize a given stringpath\n * 1. Reduce multiple slashes ///// to single /\n * @param {String} path \n * @returns \n */\nexport function _normalizePath (path) {\n    // multiple //// should be reduced to single /\n    let s = path[0]\n    for(let i=1; i<path.length; ++i) {\n        if(path[i] === path[i-1] && path[i] === '/') continue;\n        else s += path[i]\n    }\n    return s\n}\n","/**\n * This is the processor for terminal input,\n * Given the current line entered by the user,\n * and the ctx of the previous interaction,\n * it will return the result\n */\nimport { useRun, useFsCommands, help } from \"./commandScripts\"\nimport { splitter } from \"../utils\"\n\nexport function useProcessor(ctx) {\n    const fsCommands = useFsCommands()\n    const run = useRun()\n    \n    const process = line => _process(line, ctx, {\n        help, run, ...fsCommands\n    })\n    \n    return { process }\n}\n\nfunction _process(line, ctx, ...commandsBank) {\n    let args = splitter(line) // line.trim().split(/\\s+/)\n    let cmd = args[0]\n    // console.log(args)\n\n    // Let's create a basket of Commands\n    // TODO: CHECK for Naming Collision among Commands\n    let allCommands = {}\n\n    for(let cmdBank of commandsBank) {\n        allCommands = { ...allCommands, ...cmdBank }\n    }\n\n    // default init\n    let msg = `Sorry could not find the command \"<b>${cmd}</b>\"`\n    let code = -1\n    \n    if(cmd in allCommands) {\n        [ msg, code ] = allCommands[cmd](ctx, args.slice(1))\n    }\n\n    return { msg, code, ctx }\n}","import { useFileSystem } from \"../../../features/fileSystem/useFileSystem\"\nimport { FILE_TYPE } from \"../../../const/FILE_CONST\"\n\nexport function useFsCommands () {\n    const fs = useFileSystem()\n\n    return {\n        ls, pwd, touch, mkdir,\n        md: mkdir, cd,\n    }\n\n\n    // list all files in current working directory\n    function ls (ctx, args) {\n        const files = fs.getChildrenNames(ctx.currentFolderId)\n        return [files.join(', '), 0]\n    }\n\n    // Return the present working directory\n    function pwd (ctx, args) {\n        // console.log(ctx)\n        const path = fs.getPathTill(ctx.currentFolderId)\n        return [path, 0]\n    }\n\n    // create new files touch file1 file2\n    function touch (ctx, args) {\n        let msgs = ''\n        for(let f of args) {\n            let msg = fs.createFile(f, ctx.currentFolderId)\n            if(msg) {\n                msgs += msg + '\\n'\n            }\n        }\n        return [msgs, 0]\n    }\n\n    // create new folder mkdir dir1 dir2\n    function mkdir (ctx, args) {\n        let msgs = ''\n        for(let f of args) {\n            let msg = fs.createDir(f, ctx.currentFolderId)\n            if(msg) {\n                msgs += msg + '\\n'\n            }\n        }\n        return [msgs, 0]\n    }\n\n    function cd (ctx, args) {\n        let path = args[0]\n        if(!path) return ['', 0]\n\n        // if the path needs to start from current location\n        if(path[0] !== '.' && path[0] !== '/') {\n            path = pwd(ctx)[0] + '/' + path\n        }\n\n        let fileInfo = fs.getFileInfo(path)\n\n        // console.log(fileInfo)\n        if(fileInfo && fileInfo.fileType === FILE_TYPE.FOLDER) {\n            ctx.currentFolderId = fileInfo.id \n        }\n        else {\n            return [\n                `\"${path}\" is not a folder to move into`\n            ]\n        }\n\n        // console.log(ctx)\n        return [\n            '', 0\n        ]\n    }\n}","/**\n * BOSS Terminal command 'run'.\n * It will try to run the app, \n * And pass the args to it.\n * @param {object} ctx \n * @param {string[]} args \n * @returns {string} message\n * @returns {number} code\n */\n\nimport useRuntime from \"../../../features/procs/useRuntime\";\n\nexport function useRun() {\n    const { run } = useRuntime()\n\n    return (ctx, args) => {\n        try {\n            run(args[0], { ctx }, ...args.slice(1))\n\n            if(ctx.error) {\n                return [ctx.error, 99]\n            }\n            return ['Attempting to run ' + args, 0]\n        }\n        catch (e) {\n            return ['Failed to run the App']\n        }\n        \n    }\n\n}\n\n\n","\n\nexport const colorify = (htm, color) => `<div style=\"color: ${color}\">${htm}</div>`\n","import withWinFrame from \"../../withWinFrame\"\nimport styles from \"./TerminalApp.module.css\"\nimport { useState, useRef, useEffect } from \"react\"\nimport { useProcessor } from \"../../../../services/forTerminal/useProcessor\"\nimport { colorify } from \"../../../../services/forTerminal/formatter\"\n// import { useFileSystem } from \"../../../../features/fileSystem/useFileSystem\"\n\nconst TerminalApp = props => {\n    const [prompt] = useState('$ > ')   // setPrompt is removed as it is ununsed\n    const [historyTxt, setHistoryTxt] = useState(colorify('Welcome to the B.O.S.S. terminal \\n(Type `help` to know the available commands)', 'lightyellow'))\n    const [currentLine, setCurrentLine] = useState(prompt)\n    const [cmdHistory, setCmdHistory] = useState([])\n    const [cmdHistoryIndex, setCmdHistoryIndex] = useState(0)\n    const currentLineRef = useRef()\n    const ctxRef = useRef({})   // context for current terminal\n    const { process } = useProcessor(ctxRef.current)\n    // const fileSystem = useFileSystem()\n\n    // const updatePrompt = useCallback(() => {\n    //     console.log('inside updatePrompt')\n    //     const pwd = fileSystem.getPathTill(ctxRef.current.currentFolderId)\n    //     console.log(pwd)\n    //     setPrompt(`$ [${pwd}] > `)\n    // }, \n    // [fileSystem])\n\n    // Focus \n    useEffect(() => {\n        const el = currentLineRef.current\n        el.focus()\n        el.selectionStart = el.selectionEnd = el.value.length;\n    }, \n    [])\n\n    // Initialize the context for current terminal\n    useEffect(() => {\n        ctxRef.current = { currentFolderId: '/' }    // '' for root folder\n        // updatePrompt()\n    }, \n    [])\n\n    // Watch the currentFolderId\n    // useEffect(() => {\n    //     const pwd = fileSystem.getPathTill(ctxRef.current.currentFolderId)\n    //     console.log(pwd)\n    //     setPrompt(`$ [${pwd}] > `)\n    // }, \n    // [ctxRef.current.currentFolderId, fileSystem.getPathTill])\n    \n    // User is writing\n    const onChange = e => {\n        let val = e.target.value\n        // prompt should not be deleted\n        // and it should always be the 1st \n        if(!val.startsWith(prompt)) {\n            return\n        }\n        setCurrentLine(val)\n    }\n\n    // onKeyUp\n    const onKeyUp = e => {\n        const keyCode = e.keyCode\n        // console.log(keyCode)\n\n        // Enter pressed - 13\n        if(keyCode === 13) {\n            // Strip the prompt at the begining\n            const currentCmd = currentLine.substring(prompt.length).trim()\n            // don't process empty line\n            if(currentCmd.length === 0) return\n\n            if(currentCmd === 'cls' || currentCmd === 'clear') {\n                setHistoryTxt('')\n            }\n            else {\n                // PROCESS THE COMMAND\n                // console.log(ctxRef.current)\n                const result = process(currentCmd, ctxRef.current) // result = { msg, code, ctx }\n\n                const newHistoryTxt = historyTxt \n                                    + colorify(currentLine, 'lightgreen')\n                                    + colorify(result.msg, 'white')\n                setHistoryTxt(newHistoryTxt)\n            }\n            \n            setCurrentLine(prompt)\n\n            // save this command in history for later retrieval\n            // only if it is not the same as just the prev one\n            if(currentCmd !== cmdHistory[cmdHistory.length-1]) {\n                const newCmdHistory = [...cmdHistory, currentCmd]\n                setCmdHistory(newCmdHistory)\n                setCmdHistoryIndex(newCmdHistory.length)\n            }\n        }\n\n        // Up pressed - 38\n        else if(keyCode === 38) {\n            if(cmdHistory.length === 0) return\n            // go up the prev command, if possible\n            let index = cmdHistoryIndex > 0 ? cmdHistoryIndex-1: 0\n            setCmdHistoryIndex(index)\n            setCurrentLine(prompt + cmdHistory[index])\n        }\n\n        // Down pressed - 40\n        else if(keyCode === 40) {\n            if(cmdHistory.length === 0) return\n            // go down the next command, if possible\n            let index = cmdHistoryIndex < (cmdHistory.length-1) ? cmdHistoryIndex+1 : (cmdHistory.length-1)\n            setCmdHistoryIndex(index)\n            setCurrentLine(prompt + cmdHistory[index])\n        }\n    }\n\n    return (\n        <div className={styles.root}>\n            <div \n                className={styles.historyTxt} \n                dangerouslySetInnerHTML={{ __html: historyTxt }}\n            ></div>\n\n            <textarea \n                className={styles.inputArea}\n                value={currentLine}\n                ref={currentLineRef}\n                onChange={onChange}\n                onKeyUp={onKeyUp}\n            ></textarea>\n        </div>\n    )\n}\n\nexport default withWinFrame(TerminalApp)","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FoldersApp_root__CdN1-\",\"locationBar\":\"FoldersApp_locationBar__lR9vB\",\"loc\":\"FoldersApp_loc__rXGZe\",\"btns\":\"FoldersApp_btns__vQOzO\",\"inner\":\"FoldersApp_inner__lYEzr\"};","// extracted by mini-css-extract-plugin\nexport default {\"file\":\"File_file__MMHS5\",\"ffIco\":\"File_ffIco__5bYlD\",\"fname\":\"File_fname__-Nx+X\",\"fileIcoBtnHolder\":\"File_fileIcoBtnHolder__+srav\"};","import { useState, useEffect } from 'react'\nimport styles from './File.module.css'\nimport { FILE_TYPE } from '../../../../../const/FILE_CONST'\nimport { isFileNameValid } from '../../../../../services/utils'\nimport { useFileSystem } from '../../../../../features/fileSystem/useFileSystem'\n// import { trimNDot } from '../../../../../services/utils'\n\nconst File = props => {\n    const { file, open, existingFileNames } = props\n    const [name, setName] = useState('')\n    const fs = useFileSystem()\n\n    useEffect(() => {\n        setName(file.name)\n    }, \n    [file.name])\n\n    const onNameChange = e => {\n        const newName = e.target.value\n        if(!isFileNameValid(newName)) return\n        setName(newName)\n    }\n\n    const saveNewFileName = () => {\n        // Collision? Reset to existing name\n        if(existingFileNames.includes(name)) {\n            setName(file.name)\n        }\n        // else if the file name has changed\n        // and not colliding with the existing names\n        else {\n            fs.rename(file.id, name)\n        }\n    }\n\n    return (\n        <div \n            className={styles.file} \n            onDoubleClick={() => open(file.id, file.fileType)}\n            title={file.name}\n        >\n            <div className={styles.fileIcoBtnHolder}>\n                <button type=\"button\" title={file.name}>\n                    <span className={styles.ffIco}>\n                        { file.fileType === FILE_TYPE.FILE && <i className=\"fa-solid fa-file-lines\"></i> }\n                        { file.fileType === FILE_TYPE.FOLDER && <i className=\"fa-regular fa-folder-open\"></i> }\n                    </span>\n                </button>\n            </div>\n            \n            <input \n                className={styles.fname} \n                type=\"text\" \n                value={name} \n                onChange={onNameChange} \n                onBlur={saveNewFileName}\n                title={file.name}\n            />\n        </div>\n    )\n}\n\nexport default File","import withWinFrame from \"../../withWinFrame\"\nimport { useState, useEffect, useCallback } from \"react\"\nimport { useFileSystem } from \"../../../../features/fileSystem/useFileSystem\"\nimport styles from './FoldersApp.module.css'\nimport { FILE_TYPE } from \"../../../../const/FILE_CONST\"\nimport File from \"./file/File\"\n\n\nconst FoldersApp = props => {\n    const { renderMenu, onClose, onNew  } = props\n    const fs = useFileSystem()\n    const { allFiles, getChildren } = fs\n    const [currentFolderId, setCurrentFolderId] = useState(\"/\") // open in root\n    const [currentFiles, setCurrentFiles] = useState(fs.getChildren(currentFolderId))\n    // const _files = useSelector(state => state.files)\n\n    useEffect(() => {\n        setCurrentFiles(getChildren(currentFolderId))\n    }, \n    [allFiles, currentFolderId, getChildren])\n\n    const refresh = useCallback(() => {\n        const _currrentChildren = getChildren(currentFolderId)\n        setCurrentFiles(_currrentChildren)\n    }, [allFiles, currentFolderId, getChildren])\n\n    const createNewFile = () => {\n        const cnt = Math.floor(Math.random()*999) \n        fs.createFile(`File_${cnt}`, currentFolderId)\n        refresh()\n    }\n\n    const createNewFolder = () => {\n        const cnt = Math.floor(Math.random()*999) \n        fs.createDir(`Folder_${cnt}`, currentFolderId)\n        refresh()\n    }\n    \n    const createMenu = () => {\n        return renderMenu({\n            File: {\n                \"New Window\": { handleClick: onNew },\n                \"New File\": { handleClick: createNewFile },\n                \"New Folder\": { handleClick: createNewFolder },\n                \"Quit\": { handleClick: onClose },\n            }\n        })\n    }\n\n    const open = (fId, fileType) => {\n        // If it's a folder, get inside\n        if(fileType === FILE_TYPE.FOLDER) {\n            setCurrentFolderId(fId)\n            setCurrentFiles(fs.getChildren(fId))\n        }\n        // Else a file\n        // TODO: Open it with appropriate app\n    }\n    \n    const goToParentFolder = () => {\n        const parentId = fs.getParentId(currentFolderId)\n        setCurrentFolderId(parentId)\n        setCurrentFiles(fs.getChildren(parentId))\n    }\n\n    return (\n        <>\n        { createMenu() }\n        <div className={styles.root}>\n            <div className={styles.locationBar}>\n                <div className={styles.loc}>\n                    { fs.getPathTill(currentFolderId) }\n                </div>\n                <div className={styles.btns}>\n                    <i className=\"fa-solid fa-rotate-right\" onClick={refresh}></i>\n                    <i className=\"fa-solid fa-arrow-up\" onClick={goToParentFolder}></i>\n                </div>\n                \n            </div>\n            \n            <div>\n                <div className={styles.inner}>\n                    {\n                        currentFiles && currentFiles.map(f => \n                            <File \n                                key={f.id} file={f} \n                                open={open} \n                                refresh={refresh} \n                                existingFileNames={currentFiles.map(f => f.name)}\n                            />\n                        )\n                    }\n                </div>\n            </div>\n            \n        </div>\n        </>\n    )\n}\n\nexport default withWinFrame(FoldersApp)","import { WelcomeApp, BCalc, AppsViewerApp, TimerApp, SettingsApp, TerminalApp, FoldersApp, BinApp\n} from '../components/applications'\n\nexport const MAP_APP_ID_TO_COMPONENT = {\n    \"appsviewer\": AppsViewerApp,\n    'settings': SettingsApp,\n    \"terminal\": TerminalApp,\n    \"folders\": FoldersApp,\n    \"bin\": BinApp,\n    'welcomeapp': WelcomeApp,\n    'bcalc': BCalc,\n    'timer': TimerApp,\n}","import withWinFrame from \"../../withWinFrame\"\n// import { useState } from \"react\"\n\nconst BinApp = props => {\n\n    return (\n        <div>\n            The Bin App - Under Development\n        </div>\n    )\n}\n\nexport default withWinFrame(BinApp)","// The Invisible Component that dynamically hold all the running apps' components\nimport { useSelector } from \"react-redux\"\nimport { MAP_APP_ID_TO_COMPONENT } from \"../../../const/MAP_APP_ID_TO_COMPONENT\"\n\n\nconst AppsContainer = () => {\n    const runningApps = Object.values(useSelector(state => state.procs))\n\n    return (\n        <div className=\"apps_container\">\n            {\n                runningApps.map(a => {\n                    const Comp = MAP_APP_ID_TO_COMPONENT[a.appId]\n                    if(Comp) return <Comp key={a.runtimeId} runtimeInfo={a} />\n                    else return null\n                })\n            }\n        </div>\n    )\n}\n\nexport default AppsContainer","import Dock from './components/system/dock/Dock';\nimport AppsContainer from './components/system/appsContainer/AppsContainer';\nimport { useSelector } from 'react-redux';\nimport './App.css';\n\nconst App = () => {\n  const settings = useSelector(state => state.settings)\n\n  const getStyles = () => ({\n    backgroundImage: `url(${settings.wallpaper})`,\n  })\n\n  return (\n    <div className=\"App\" style={getStyles()}>\n      <AppsContainer />\n      <Dock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { APPS_DETAILS } from \"../../const/APPS_DETAILS\";\n\nexport const appsSlice = createSlice({\n    name: 'apps',\n    initialState: APPS_DETAILS,\n    reducers: {\n        \n    }\n})\n\n// Action creators are generated for each case reducer function\n// export const { increment, decrement, incrementByAmount } = appsSlice.actions\n\nexport default appsSlice.reducer\n\n","import { configureStore } from '@reduxjs/toolkit'\n// import counterReducer from './features/counter/counterSlice'\nimport appsReducer from '../features/apps/appsSlice'\nimport procsReducer from '../features/procs/procsSlice'\nimport filesReducer from '../features/fileSystem/filesSlice'\nimport settingsReducer from '../features/settings/settingsSlice'\n\nexport const store = configureStore({\n    reducer: {\n        // counter: counterReducer,\n        apps: appsReducer,\n        procs: procsReducer,\n        files: filesReducer,\n        settings: settingsReducer,\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["APP_DISPLAY_TYPE","APPS_DETAILS","appId","name","iconClass","docked","displayType","allowedInstances","keywords","WINDOW_SIZES","DEFAULT","MAXIMIZED","MINIMIZED","_runtimeIdCounter","procsSlice","createSlice","initialState","runtimeId","crucial","reducers","runApp","state","action","_action$payload","payload","args","runningInstancesCount","Object","values","filter","a","length","appDetail","ctx","error","newRuntimeObj","zIndex","getMaxZIndex","winSize","_objectSpread","_defineProperty","proc","_i","_Object$values","p","terminateApp","newState","mizeApp","_action$payload2","runtimeObj","includes","modifiedRto","raiseWindow","_procsSlice$actions","actions","Math","max","apply","_toConsumableArray","map","r","dispatch","useDispatch","runningApps","useSelector","procs","run","_len","arguments","Array","_key","terminate","mize","_raiseWindow","_getMaxZIndex","props","runtime","useRuntime","_jsx","type","className","styles","onClick","title","children","clsx","visible","setVisible","minimizedApps","_jsxs","_useState","useState","_useState2","_slicedToArray","minimizeListVisible","setMinimizeListVisible","MinimizedAppsList","dockIconStyles","setZIndex","apps","dockedApps","id","style","da","DockIcon","MinimizedAppsViewer","el","initPosition","position","setPosition","interact","draggable","listeners","start","event","console","log","target","move","pos","x","dx","y","dy","menu","visibleSubMenuId","setVisibleSubMenuId","bar","menubar","entries","_ref","_ref2","menuName","menuVal","subMenu","_ref3","_ref4","subMenuName","subMenuVal","handleAndHide","handleClick","LoadingScreen","appName","loadingComp","renderMenu","Menubar","appProps","AppComponent","runtimeInfo","initPosRef","useRef","floor","random","initSizeRef","window","innerWidth","innerHeight","dragRef","resizeRef","_useDragV","useDragV2","current","_useDragV2","_useDragV3","size","close","root","minimized","defaultSized","maximized","height","width","transform","concat","titlebar","apptitle","dragHangle","ref","btns","mizeBtn","body","Suspense","fallback","onClose","onNew","statusbar","repositionHandle","WinFrame","withWinFrame","React","allItems","filterKeys","setFilteredItems","_useFilter","filteredItems","_useState3","_useState4","filterTxt","setFilterTxt","e","txt","value","filtered","item","some","key","toLowerCase","useFilter","_useFilter2","onChangeFilterTxt","useEffect","marginBottom","onChange","placeholder","padding","filteredApps","setFilteredApps","_Fragment","File","Edit","TypeToFilter","onDoubleClick","setTimeout","WallpaperConfig","wallpapers","path","settingsSlice","wallpaper","changeWallpaper","SettingsConfig","menuItems","component","src","alt","handleWallpaperChange","selected","setSelected","isMenuClosed","setIsMenuClosed","_useState5","_useState6","filteredMenuItems","setFilteredMenuItems","container","menu_closed","btn_panel","toggle_btn","left","left_inner","mid","mid_inner","help","appsNamesAndIds","forEach","app","helpText","FILE_TYPE","get","k","JSON","parse","localStorage","getItem","set","v","setItem","stringify","clear","isFileNameValid","fileName","test","KEY_FILE_TREE","initFileTree","fileType","parentId","content","ls","filesSlice","create","owner","trim","fid","newFile","uuidv4","date_creation","Date","now","date_modification","_create","rename","fileId","newName","_rename","_filesSlice$actions","useFileSystem","_files","files","createFile","useCallback","createDir","createFolder","getChildren","_getChildren","allFiles","getParentId","fileID","_getParentId","getChildrenNames","f","_getChildrenNames","getPathTill","pathSegments","push","reverse","join","replace","_getPathTill","getFileInfo","absPath","s","i","_normalizePath","_step","pathNames","split","filesInLevel","lastFile","_iterator","_createForOfIteratorHelper","n","done","_step2","fname","isFound","_iterator2","file","err","_getFileInfo","cId","useProcessor","fsCommands","fs","currentFolderId","pwd","touch","msgs","msg","mkdir","md","cd","fileInfo","useFsCommands","slice","useRun","process","line","parts","q","qMap","qInProg","cnt","c","qId","replaceAll","splitter","cmd","allCommands","commandsBank","_commandsBank","cmdBank","code","_allCommands$cmd","_allCommands$cmd2","_process","colorify","htm","color","prompt","historyTxt","setHistoryTxt","currentLine","setCurrentLine","_useState7","_useState8","cmdHistory","setCmdHistory","_useState9","_useState10","cmdHistoryIndex","setCmdHistoryIndex","currentLineRef","ctxRef","focus","selectionStart","selectionEnd","dangerouslySetInnerHTML","__html","val","startsWith","onKeyUp","keyCode","currentCmd","substring","result","newHistoryTxt","newCmdHistory","index","open","existingFileNames","setName","onBlur","setCurrentFolderId","currentFiles","setCurrentFiles","refresh","_currrentChildren","createNewFile","createNewFolder","fId","MAP_APP_ID_TO_COMPONENT","AppsViewerApp","SettingsApp","TerminalApp","FoldersApp","WelcomeApp","BCalc","TimerApp","Comp","settings","backgroundImage","AppsContainer","Dock","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","appsReducer","procsReducer","filesReducer","settingsReducer","ReactDOM","document","getElementById","render","Provider","App","reportWebVitals"],"sourceRoot":""}